package ex9;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetSocketAddress;
import java.net.Socket;

public class ConnectRunnable implements Runnable {

	InetSocketAddress addr;
	DistributedTextEditor dte;
	Socket conn;
	boolean notInterrupted;
	BufferedReader input;
	PrintWriter output;

	public ConnectRunnable(InetSocketAddress addr, DistributedTextEditor dte){
		this.addr = addr;
		this.dte = dte;
	}

	public void disconnect(){
		if(conn!=null){
			if(!conn.isClosed()){
				System.out.println("CLIENT - Trying to close outgoing connection");
				dte.disconnectER();
			}
		}
	}

	@Override
	public void run() {
		try {
			
			conn = new Socket(addr.getAddress(),addr.getPort());
			System.out.println("CLIENT - START Outgoing connection");
			dte.setConnection(conn);
			dte.setTitle("Connected to " + addr.getAddress() + ":" + addr.getPort());
					
			while(!conn.isClosed()){

			}
			System.out.println("CLIENT - END Outgoing connection");
			dte.setTitle("Disconnected from server");
			
			return;

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
